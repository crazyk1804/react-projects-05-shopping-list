{"version":3,"sources":["components/Header/Header.js","withDataFetching.js","components/Button/Button.js","components/Header/SubHeader.js","containers/Lists.js","components/ListItem/ListItem.js","containers/List.js","components/FormItem/FormItem.js","containers/Form.js","containers/App.js","serviceWorker.js","index.js"],"names":["HeaderWrapper","styled","div","Title","h1","Header","withDataFetching","props","WrappedComponent","WithDataFetching","state","data","loading","error","fetch","dataSource","json","dataJSON","this","setState","message","React","Component","displayName","name","Button","button","SubHeaderWrapper","h2","SubHeaderButton","SubHeader","goBack","title","openForm","onClick","ListWrapper","ListLink","Link","h3","Alert","span","history","map","list","key","id","to","ListItemWrapper","Total","ListItem","quantity","price","match","items","filter","item","listId","parseInt","params","push","url","FormItemWrapper","Label","label","Input","input","FormItem","type","placeholder","value","handleOnChange","htmlFor","FormWrapper","SubmitButton","Form","GlobalStyle","createGlobalStyle","AppWrapper","App","exact","path","component","Lists","List","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.06fc2e4d.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderWrapper = styled.div`\n  background-color: orange;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\nconst Title = styled.h1`\n  pointer-events: none;\n`;\n\nconst Header = () => (\n  <HeaderWrapper>\n    <Title>Personal Shopping List</Title>\n  </HeaderWrapper>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst withDataFetching = props => WrappedComponent => {\n  class WithDataFetching extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        data: [],\n        loading: false,\n        error: '',\n      };\n    }\n\n    async componentDidMount() {\n      try {\n        const data = await fetch(props.dataSource);\n        const dataJSON = await data.json();\n\n        if (dataJSON) {\n          this.setState({\n            data: dataJSON,\n            loading: false,\n          });\n        }\n      } catch (error) {\n        this.setState({\n          loading: false,\n          error: error.message,\n        });\n      }\n    }\n\n    render() {\n      const { data, loading, error } = this.state;\n\n      return (\n        <WrappedComponent\n          data={data}\n          loading={loading}\n          error={error}\n          {...this.props}\n        />\n      );\n    }\n  }\n\n  WithDataFetching.displayName = `WithDataFetching(${WrappedComponent.name})`;\n\n  return WithDataFetching;\n};\n\nexport default withDataFetching;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: orange;\n  color: white;\n  padding: 10px;\n  line-height: 2;\n  border-radius: 5px;\n  border: 0;\n  font-size: inherit;\n  cursor: pointer;\n`;\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button/Button';\n\nconst SubHeaderWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  background: navajowhite;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  flex-basis: 60%;\n\n  &:first-child {\n    margin-left: 20%;\n  }\n\n  &:last-child {\n    margin-right: 20%;\n  }\n`;\n\nconst SubHeaderButton = styled(Button)`\n  margin: 10px 5%;\n`;\n\nconst SubHeader = ({ goBack, title, openForm = false }) => (\n  <SubHeaderWrapper>\n    {goBack && (\n      <SubHeaderButton onClick={goBack}>{`< Go Back`}</SubHeaderButton>\n    )}\n    <Title>{title}</Title>\n    {openForm && (\n      <SubHeaderButton onClick={openForm}>{`+ Add Item`}</SubHeaderButton>\n    )}\n  </SubHeaderWrapper>\n);\n\nexport default SubHeader;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport withDataFetching from '../withDataFetching';\nimport SubHeader from '../components/Header/SubHeader';\n\nconst ListWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  margin: 5%;\n`;\n\nconst ListLink = styled(Link)`\n  display: flex;\n  text-align: left;\n  align-items: center;\n  padding: 1%;\n  background: lightGray;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 2%;\n  color: black;\n  text-decoration: none;\n`;\n\nconst Title = styled.h3`\n  flex-basis: 80%;\n`;\n\nconst Alert = styled.span`\n  width: 100%;\n  text-align: center;\n`;\n\nconst Lists = ({ data, loading, error, history }) =>\n  !loading && !error ? (\n    <>\n      {history && <SubHeader title='Your Lists' />}\n      <ListWrapper>\n        {data &&\n          data.map(list => (\n            <ListLink key={list.id} to={`list/${list.id}`}>\n              <Title>{list.title}</Title>\n            </ListLink>\n          ))}\n      </ListWrapper>\n    </>\n  ) : (\n    <Alert>{loading ? 'Loading...' : error}</Alert>\n  );\n\nexport default withDataFetching({\n  dataSource:\n    'https://my-json-server.typicode.com/PacktPublishing/React-Projects/lists',\n})(Lists);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ListItemWrapper = styled.div`\n  display: flex;\n  text-align: left;\n  align-items: center;\n  padding: 1%;\n  background: lightGray;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 2%;\n  text-decoration: none;\n`;\n\nconst Title = styled.h3`\n  flex-basis: 70%;\n`;\n\nconst Total = styled.span`\n  flex-basis: 15%;\n  font-weight: bold;\n  text-align: right;\n`;\n\nconst ListItem = ({ data }) => (\n  <ListItemWrapper>\n    <Title>{data.title}</Title>\n    <Total>{`Quantity: ${data.quantity}`}</Total>\n    <Total>{`$ ${data.price}`}</Total>\n  </ListItemWrapper>\n);\n\nexport default ListItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport withDataFetching from '../withDataFetching';\nimport SubHeader from '../components/Header/SubHeader';\nimport ListItem from '../components/ListItem/ListItem';\n\nconst ListItemWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  margin: 2% 5%;\n`;\n\nconst Alert = styled.span`\n  width: 100%;\n  text-align: center;\n`;\n\nconst List = ({ data, loading, error, match, history }) => {\n  const items =\n    data && data.filter(item => item.listId === parseInt(match.params.id));\n\n  return !loading && !error ? (\n    <>\n      {history && (\n        <SubHeader\n          goBack={() => history.goBack()}\n          openForm={() => history.push(`${match.url}/new`)}\n        />\n      )}\n      <ListItemWrapper>\n        {items && items.map(item => <ListItem key={item.id} data={item} />)}\n      </ListItemWrapper>\n    </>\n  ) : (\n    <Alert>{loading ? 'Loading...' : error}</Alert>\n  );\n};\n\nexport default withDataFetching({\n  dataSource:\n    'https://my-json-server.typicode.com/pranayfpackt/-React-Projects/items',\n})(List);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst FormItemWrapper = styled.div`\n  display: flex;\n  text-align: left;\n  flex-direction: column;\n  margin-bottom: 2%;\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-weight: bold;\n  padding: 10px 0;\n`;\n\nconst Input = styled.input`\n  flex-basis: 60%;\n  border: 0;\n  font-size: inherit;\n  border-radius: 5px;\n  padding: 10px;\n  border: 1px solid lightGrey;\n`;\n\nconst FormItem = ({\n  id,\n  label,\n  type = 'text',\n  placeholder = '',\n  value,\n  handleOnChange,\n}) => (\n  <FormItemWrapper>\n    <Label htmlFor={id}>{label}</Label>\n    <Input\n      type={type}\n      name={id}\n      id={id}\n      placeholder={placeholder}\n      value={value}\n    />\n  </FormItemWrapper>\n);\n\nexport default FormItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport SubHeader from '../components/Header/SubHeader';\nimport FormItem from '../components/FormItem/FormItem';\nimport Button from '../components/Button/Button';\n\nconst FormWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  margin: 2% 5%;\n`;\n\nconst SubmitButton = styled(Button)`\n  background: blue;\n  margin: 2% 0;\n`;\n\nconst Form = ({ match, history }) => (\n  <>\n    {history && (\n      <SubHeader goBack={() => history.goBack()} title={`Add Item`} />\n    )}\n    <FormWrapper>\n      <form>\n        <FormItem id='title' label='Title' placeholder='Insert title' />\n        <FormItem\n          id='quantity'\n          label='Quantity'\n          type='number'\n          placeholder='0'\n        />\n        <FormItem id='price' label='Price' type='number' placeholder='0.00' />\n        <SubmitButton>Add Item</SubmitButton>\n      </form>\n    </FormWrapper>\n  </>\n);\n\nexport default Form;\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from '../components/Header/Header';\nimport Lists from './Lists';\nimport List from './List';\nimport Form from './Form';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nconst AppWrapper = styled.div`\n  text-align: center;\n`;\n\nconst App = () => (\n  <>\n    <GlobalStyle />\n    <AppWrapper>\n      <Header />\n      <Switch>\n        <Route exact path='/' component={Lists} />\n        <Route path='/list/:id/new' component={Form} />\n        <Route path='/list/:id' component={List} />\n      </Switch>\n    </AppWrapper>\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}